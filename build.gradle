plugins {
	id 'fabric-loom' version '0.11-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name + "-" + project.minecraft_version
version = project.mod_version
group = project.maven_group

loom {
	accessWidenerPath = file("src/main/resources/horsebuff.accesswidener")
}

configurations {
	modIncludeImplementation

	include.extendsFrom modIncludeImplementation
	modImplementation.extendsFrom modIncludeImplementation
}

repositories {
	// Cloth Config
	maven { url "https://maven.shedaniel.me/" }

	// Mod Menu
	maven { url "https://maven.terraformersmc.com/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modIncludeImplementation(fabricApi.module("fabric-api-base", project.fabric_version))
	modIncludeImplementation(fabricApi.module("fabric-rendering-data-attachment-v1", project.fabric_version))

	// Cloth Config
	modIncludeImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}")

	// Mod Menu
	modImplementation("com.terraformersmc:modmenu:${project.mod_menu_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// set encode to UTF-8, fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	it.options.release = 17
}
java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
