buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'
apply plugin: 'idea'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.mod_group

minecraft {
    version = "${minecraft_version}-${forge_version}-${minecraft_version}"
    mappings = mappings_version
    runDir = "run"
    clientJvmArgs += "-Dfml.coreMods.load=net.f53.horsebuff.core.CoreMod"
    serverJvmArgs += "-Dfml.coreMods.load=net.f53.horsebuff.core.CoreMod"
    String resolved_core_config = mod_mixin_configs.replace('${mod_id}', mod_id)
    clientRunArgs += "--mixin ${resolved_core_config}"
    serverRunArgs += "--mixin ${resolved_core_config}"
    makeObfSourceJar = false

}

repositories {
    maven { url = "https://maven.shedaniel.me" }
    maven { url = "https://maven.architectury.dev/" }
    maven { url = "https://dvs1.progwml6.com/files/maven/" }
    maven { url = "https://repo.spongepowered.org/maven" }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    embed('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'guava'
        exclude module: 'commons-io'
        exclude module: 'gson'
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft_version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        include "${mod_id}.mixins.json"
                
        expand 'version':project.version, 'mcversion':project.minecraft_version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

mixin {
    add sourceSets.main, mod_mixin_refmap.replace('${mod_id}', mod_id)
}

jar {
    from(configurations.embed.collect {
        it.isDirectory() ? it : zipTree(it)
    }) {
        exclude "LICENSE.txt", "META-INF/MANIFSET.MF", "META-INF/maven/**", "META-INF/*.RSA", "META-INF/*.SF"
    }

    manifest {
        attributes "FMLCorePluginContainsFMLMod": "false"
        attributes "ForceLoadAsMod": "true"
        attributes "TweakClass": "org.spongepowered.asm.launch.MixinTweaker"
        attributes "TweakOrder": "0"
        attributes "MixinConfigs": mod_mixin_configs.replace('${mod_id}', mod_id)
    }
}

task packDev(type: Jar) {
    from sourceSets.main.output
    from sourceSets.main.allJava
    baseName = "${archives_base_name}_dev"
    version = "${project.minecraft_version}-${project.version}"

    println(defaultTasks)
}

artifacts {
    archives packDev
}